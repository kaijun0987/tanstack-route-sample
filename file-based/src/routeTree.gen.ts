/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './module/__root'
import { Route as GameMainImport } from './module/game/main'
import { Route as AboutUsMainImport } from './module/about-us/main'
import { Route as UnauthMainImport } from './module/_unauth/main'
import { Route as Test1MainImport } from './module/_test1/main'
import { Route as MainImport } from './module/main'
import { Route as GamePlayerImport } from './module/game/player'
import { Route as UnauthLoginImport } from './module/_unauth/login'
import { Route as AboutUsIntroductionMainImport } from './module/about-us/introduction/main'
import { Route as AboutUsAboutMainImport } from './module/about-us/about/main'
import { Route as GameUserUserIdImport } from './module/game/user.$userId'

// Create/Update Routes

const GameMainRoute = GameMainImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRoute,
} as any)

const AboutUsMainRoute = AboutUsMainImport.update({
  id: '/about-us',
  path: '/about-us',
  getParentRoute: () => rootRoute,
} as any)

const UnauthMainRoute = UnauthMainImport.update({
  id: '/_unauth',
  getParentRoute: () => rootRoute,
} as any)

const Test1MainRoute = Test1MainImport.update({
  id: '/_test1',
  getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GamePlayerRoute = GamePlayerImport.update({
  id: '/player',
  path: '/player',
  getParentRoute: () => GameMainRoute,
} as any)

const UnauthLoginRoute = UnauthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthMainRoute,
} as any)

const AboutUsIntroductionMainRoute = AboutUsIntroductionMainImport.update({
  id: '/introduction',
  path: '/introduction',
  getParentRoute: () => AboutUsMainRoute,
} as any)

const AboutUsAboutMainRoute = AboutUsAboutMainImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AboutUsMainRoute,
} as any)

const GameUserUserIdRoute = GameUserUserIdImport.update({
  id: '/user/$userId',
  path: '/user/$userId',
  getParentRoute: () => GameMainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_test1': {
      id: '/_test1'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Test1MainImport
      parentRoute: typeof rootRoute
    }
    '/_unauth': {
      id: '/_unauth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthMainImport
      parentRoute: typeof rootRoute
    }
    '/about-us': {
      id: '/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof AboutUsMainImport
      parentRoute: typeof rootRoute
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameMainImport
      parentRoute: typeof rootRoute
    }
    '/about-us/about': {
      id: '/about-us/about'
      path: '/about'
      fullPath: '/about-us/about'
      preLoaderRoute: typeof AboutUsAboutMainImport
      parentRoute: typeof AboutUsMainImport
    }
    '/about-us/introduction': {
      id: '/about-us/introduction'
      path: '/introduction'
      fullPath: '/about-us/introduction'
      preLoaderRoute: typeof AboutUsIntroductionMainImport
      parentRoute: typeof AboutUsMainImport
    }
    '/_unauth/login': {
      id: '/_unauth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthLoginImport
      parentRoute: typeof UnauthMainImport
    }
    '/game/player': {
      id: '/game/player'
      path: '/player'
      fullPath: '/game/player'
      preLoaderRoute: typeof GamePlayerImport
      parentRoute: typeof GameMainImport
    }
    '/game/user/$userId': {
      id: '/game/user/$userId'
      path: '/user/$userId'
      fullPath: '/game/user/$userId'
      preLoaderRoute: typeof GameUserUserIdImport
      parentRoute: typeof GameMainImport
    }
  }
}

// Create and export the route tree

interface UnauthMainRouteChildren {
  UnauthLoginRoute: typeof UnauthLoginRoute
}

const UnauthMainRouteChildren: UnauthMainRouteChildren = {
  UnauthLoginRoute: UnauthLoginRoute,
}

const UnauthMainRouteWithChildren = UnauthMainRoute._addFileChildren(
  UnauthMainRouteChildren,
)

interface AboutUsMainRouteChildren {
  AboutUsAboutMainRoute: typeof AboutUsAboutMainRoute
  AboutUsIntroductionMainRoute: typeof AboutUsIntroductionMainRoute
}

const AboutUsMainRouteChildren: AboutUsMainRouteChildren = {
  AboutUsAboutMainRoute: AboutUsAboutMainRoute,
  AboutUsIntroductionMainRoute: AboutUsIntroductionMainRoute,
}

const AboutUsMainRouteWithChildren = AboutUsMainRoute._addFileChildren(
  AboutUsMainRouteChildren,
)

interface GameMainRouteChildren {
  GamePlayerRoute: typeof GamePlayerRoute
  GameUserUserIdRoute: typeof GameUserUserIdRoute
}

const GameMainRouteChildren: GameMainRouteChildren = {
  GamePlayerRoute: GamePlayerRoute,
  GameUserUserIdRoute: GameUserUserIdRoute,
}

const GameMainRouteWithChildren = GameMainRoute._addFileChildren(
  GameMainRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof MainRoute
  '': typeof UnauthMainRouteWithChildren
  '/about-us': typeof AboutUsMainRouteWithChildren
  '/game': typeof GameMainRouteWithChildren
  '/about-us/about': typeof AboutUsAboutMainRoute
  '/about-us/introduction': typeof AboutUsIntroductionMainRoute
  '/login': typeof UnauthLoginRoute
  '/game/player': typeof GamePlayerRoute
  '/game/user/$userId': typeof GameUserUserIdRoute
}

export interface FileRoutesByTo {
  '/': typeof MainRoute
  '': typeof UnauthMainRouteWithChildren
  '/about-us': typeof AboutUsMainRouteWithChildren
  '/game': typeof GameMainRouteWithChildren
  '/about-us/about': typeof AboutUsAboutMainRoute
  '/about-us/introduction': typeof AboutUsIntroductionMainRoute
  '/login': typeof UnauthLoginRoute
  '/game/player': typeof GamePlayerRoute
  '/game/user/$userId': typeof GameUserUserIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof MainRoute
  '/_test1': typeof Test1MainRoute
  '/_unauth': typeof UnauthMainRouteWithChildren
  '/about-us': typeof AboutUsMainRouteWithChildren
  '/game': typeof GameMainRouteWithChildren
  '/about-us/about': typeof AboutUsAboutMainRoute
  '/about-us/introduction': typeof AboutUsIntroductionMainRoute
  '/_unauth/login': typeof UnauthLoginRoute
  '/game/player': typeof GamePlayerRoute
  '/game/user/$userId': typeof GameUserUserIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about-us'
    | '/game'
    | '/about-us/about'
    | '/about-us/introduction'
    | '/login'
    | '/game/player'
    | '/game/user/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about-us'
    | '/game'
    | '/about-us/about'
    | '/about-us/introduction'
    | '/login'
    | '/game/player'
    | '/game/user/$userId'
  id:
    | '__root__'
    | '/'
    | '/_test1'
    | '/_unauth'
    | '/about-us'
    | '/game'
    | '/about-us/about'
    | '/about-us/introduction'
    | '/_unauth/login'
    | '/game/player'
    | '/game/user/$userId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MainRoute: typeof MainRoute
  Test1MainRoute: typeof Test1MainRoute
  UnauthMainRoute: typeof UnauthMainRouteWithChildren
  AboutUsMainRoute: typeof AboutUsMainRouteWithChildren
  GameMainRoute: typeof GameMainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  MainRoute: MainRoute,
  Test1MainRoute: Test1MainRoute,
  UnauthMainRoute: UnauthMainRouteWithChildren,
  AboutUsMainRoute: AboutUsMainRouteWithChildren,
  GameMainRoute: GameMainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_test1",
        "/_unauth",
        "/about-us",
        "/game"
      ]
    },
    "/": {
      "filePath": "main.tsx"
    },
    "/_test1": {
      "filePath": "_test1/main.tsx"
    },
    "/_unauth": {
      "filePath": "_unauth/main.tsx",
      "children": [
        "/_unauth/login"
      ]
    },
    "/about-us": {
      "filePath": "about-us/main.tsx",
      "children": [
        "/about-us/about",
        "/about-us/introduction"
      ]
    },
    "/game": {
      "filePath": "game/main.tsx",
      "children": [
        "/game/player",
        "/game/user/$userId"
      ]
    },
    "/about-us/about": {
      "filePath": "about-us/about/main.tsx",
      "parent": "/about-us"
    },
    "/about-us/introduction": {
      "filePath": "about-us/introduction/main.tsx",
      "parent": "/about-us"
    },
    "/_unauth/login": {
      "filePath": "_unauth/login.tsx",
      "parent": "/_unauth"
    },
    "/game/player": {
      "filePath": "game/player.tsx",
      "parent": "/game"
    },
    "/game/user/$userId": {
      "filePath": "game/user.$userId.tsx",
      "parent": "/game"
    }
  }
}
ROUTE_MANIFEST_END */
